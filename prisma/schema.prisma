generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Categories {
  id            Int    @id @unique @default(autoincrement())
  category_name String @db.VarChar(25)
}

model Orgs {
  id        Int        @id @unique @default(autoincrement())
  org_name  String     @db.VarChar(100)
  city      Int?
  vendor_id Int
  City      City?      @relation(fields: [city], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "fk_orgs_to_city")
  Vendors   Vendors    @relation(fields: [vendor_id], references: [id], onDelete: Cascade, map: "fk_orgs_to_vendors")
  Products  Products[]

  @@index([city], map: "fk_orgs_to_city")
  @@index([vendor_id], map: "fk_orgs_to_vendors")
}

model Products {
  id              Int               @id @default(autoincrement())
  name            String            @db.VarChar(50)
  avail_city      Int
  org_id          Int
  category_id     Int
  sub_category_id Int
  City            City              @relation(fields: [avail_city], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "fk_products_to_city")
  Sub_Categories  Sub_Categories    @relation(fields: [category_id, sub_category_id], references: [category_id, id], onDelete: Cascade, map: "fk_product_to_sub_category")
  Orgs            Orgs              @relation(fields: [org_id], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "fk_product_to_orgs")
  Product_details Product_details[]

  @@index([category_id, sub_category_id], map: "category_id")
  @@index([avail_city], map: "fk_products_to_city")
  @@index([org_id], map: "org_id")
}

model Sub_Categories {
  id                Int        @id @unique @default(autoincrement())
  sub_category_name String     @db.VarChar(25)
  category_id       Int
  Products          Products[]

  @@index([category_id], map: "fk_sub_category_to_category")
}

model Vendor_Orgs {
  id      Int    @id @unique @default(autoincrement())
  orgs_id Json
  city    Int?
  name    String @db.VarChar(50)
  City    City?  @relation(fields: [city], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "fk_vendor_orgs_to_city")

  @@index([city], map: "fk_vendor_orgs_to_city")
}

model Vendors {
  id       Int    @id @unique @default(autoincrement())
  username String @db.VarChar(50)
  password String @db.VarChar(100)
  Orgs     Orgs[]
}

model City {
  id          Int           @id @unique @default(autoincrement())
  city        String        @db.VarChar(50)
  state       String        @db.VarChar(50)
  country     String        @db.VarChar(50)
  Orgs        Orgs[]
  Products    Products[]
  Vendor_Orgs Vendor_Orgs[]
}

model Product_details {
  id       Int      @id @unique @default(autoincrement())
  pid      Int
  p_img    String   @db.VarChar(100)
  Products Products @relation(fields: [pid], references: [id], onDelete: Cascade,onUpdate: Cascade, map: "fk_product_details_to_products")

  @@index([pid], map: "fk_product_details_to_products")
}
